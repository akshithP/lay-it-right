"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("app/page",{

/***/ "(app-pages-browser)/./src/store/project-store.ts":
/*!************************************!*\
  !*** ./src/store/project-store.ts ***!
  \************************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   useProjectStore: function() { return /* binding */ useProjectStore; }\n/* harmony export */ });\n/* harmony import */ var zustand__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! zustand */ \"(app-pages-browser)/./node_modules/zustand/esm/index.mjs\");\n/* harmony import */ var zustand_middleware_immer__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! zustand/middleware/immer */ \"(app-pages-browser)/./node_modules/zustand/esm/middleware/immer.mjs\");\n/* harmony import */ var zustand_middleware__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! zustand/middleware */ \"(app-pages-browser)/./node_modules/zustand/esm/middleware.mjs\");\n\n\n\nconst initialWizardSteps = [\n    {\n        id: \"dimensions\",\n        title: \"Room Dimensions\",\n        description: \"Enter room measurements\",\n        completed: false,\n        current: true\n    },\n    {\n        id: \"tile-selection\",\n        title: \"Tile & Grout\",\n        description: \"Select tile size and grout width\",\n        completed: false,\n        current: false\n    },\n    {\n        id: \"pattern-selection\",\n        title: \"Layout Pattern\",\n        description: \"Choose tiling pattern\",\n        completed: false,\n        current: false\n    },\n    {\n        id: \"results\",\n        title: \"Results\",\n        description: \"View calculations and preview\",\n        completed: false,\n        current: false\n    }\n];\nconst initialProject = {\n    name: \"New Tiling Project\",\n    layout: {\n        shape: \"rectangle\",\n        dimensions: {\n            length: 0,\n            width: 0,\n            unit: \"m\"\n        },\n        pattern: \"grid\"\n    },\n    tile: {\n        length: 300,\n        width: 300,\n        unit: \"mm\",\n        groutWidth: 2\n    }\n};\nconst useProjectStore = (0,zustand__WEBPACK_IMPORTED_MODULE_0__.create)()((0,zustand_middleware__WEBPACK_IMPORTED_MODULE_1__.persist)((0,zustand_middleware_immer__WEBPACK_IMPORTED_MODULE_2__.immer)((set, get)=>({\n        currentProject: initialProject,\n        wizardSteps: initialWizardSteps,\n        currentStep: 0,\n        savedProjects: [],\n        isLoading: false,\n        error: null,\n        createNewProject: ()=>{\n            set((state)=>{\n                state.currentProject = {\n                    ...initialProject,\n                    id: crypto.randomUUID(),\n                    createdAt: new Date(),\n                    updatedAt: new Date()\n                };\n                state.wizardSteps = initialWizardSteps;\n                state.currentStep = 0;\n                state.error = null;\n            });\n        },\n        saveProject: ()=>{\n            set((state)=>{\n                const project = state.currentProject;\n                if (!project.id) return;\n                project.updatedAt = new Date();\n                const existingIndex = state.savedProjects.findIndex((p)=>p.id === project.id);\n                if (existingIndex >= 0) {\n                    state.savedProjects[existingIndex] = project;\n                } else {\n                    state.savedProjects.push(project);\n                }\n            });\n        },\n        loadProject: (projectId)=>{\n            set((state)=>{\n                const project = state.savedProjects.find((p)=>p.id === projectId);\n                if (project) {\n                    state.currentProject = {\n                        ...project\n                    };\n                    state.currentStep = 4;\n                    state.wizardSteps = state.wizardSteps.map((step, index)=>({\n                            ...step,\n                            completed: index < 4,\n                            current: index === 4\n                        }));\n                }\n            });\n        },\n        deleteProject: (projectId)=>{\n            set((state)=>{\n                state.savedProjects = state.savedProjects.filter((p)=>p.id !== projectId);\n            });\n        },\n        updateProjectName: (name)=>{\n            set((state)=>{\n                state.currentProject.name = name;\n            });\n        },\n        nextStep: ()=>{\n            set((state)=>{\n                const currentStep = state.currentStep;\n                if (currentStep < state.wizardSteps.length - 1) {\n                    state.wizardSteps[currentStep].completed = true;\n                    state.wizardSteps[currentStep].current = false;\n                    state.currentStep = currentStep + 1;\n                    state.wizardSteps[currentStep + 1].current = true;\n                }\n            });\n        },\n        previousStep: ()=>{\n            set((state)=>{\n                const currentStep = state.currentStep;\n                if (currentStep > 0) {\n                    state.wizardSteps[currentStep].current = false;\n                    state.currentStep = currentStep - 1;\n                    state.wizardSteps[currentStep - 1].current = true;\n                }\n            });\n        },\n        goToStep: (stepIndex)=>{\n            set((state)=>{\n                if (stepIndex >= 0 && stepIndex < state.wizardSteps.length) {\n                    state.wizardSteps[state.currentStep].current = false;\n                    state.currentStep = stepIndex;\n                    state.wizardSteps[stepIndex].current = true;\n                }\n            });\n        },\n        completeStep: (stepIndex)=>{\n            set((state)=>{\n                if (stepIndex >= 0 && stepIndex < state.wizardSteps.length) {\n                    state.wizardSteps[stepIndex].completed = true;\n                }\n            });\n        },\n        setLayoutShape: (shape)=>{\n            set((state)=>{\n                if (state.currentProject.layout) {\n                    state.currentProject.layout.shape = shape;\n                }\n            });\n        },\n        setLayoutDimensions: (length, width, unit)=>{\n            set((state)=>{\n                if (state.currentProject.layout) {\n                    state.currentProject.layout.dimensions = {\n                        length,\n                        width,\n                        unit\n                    };\n                }\n            });\n        },\n        setLayoutPattern: (pattern)=>{\n            set((state)=>{\n                if (state.currentProject.layout) {\n                    state.currentProject.layout.pattern = pattern;\n                }\n            });\n        },\n        setCustomLayout: (customLayout)=>{\n            set((state)=>{\n                if (state.currentProject.layout) {\n                    state.currentProject.layout.customLayout = customLayout;\n                }\n            });\n        },\n        setTileSpecification: (tile)=>{\n            set((state)=>{\n                state.currentProject.tile = tile;\n            });\n        },\n        calculateProject: ()=>{\n            const state = get();\n            const { currentProject } = state;\n            if (!currentProject.layout || !currentProject.tile) return;\n            set((draft)=>{\n                draft.isLoading = true;\n            });\n            // Simulate async calculation\n            setTimeout(async ()=>{\n                try {\n                    // Import calculation function dynamically to avoid circular dependencies\n                    const { calculateProject } = await __webpack_require__.e(/*! import() */ \"_app-pages-browser_src_utils_tile-calculations_ts\").then(__webpack_require__.bind(__webpack_require__, /*! @/utils/tile-calculations */ \"(app-pages-browser)/./src/utils/tile-calculations.ts\"));\n                    if (currentProject.layout && currentProject.tile) {\n                        const calculations = calculateProject(currentProject);\n                        if (calculations) {\n                            set((draft)=>{\n                                draft.currentProject.calculations = calculations;\n                                draft.isLoading = false;\n                            });\n                        } else {\n                            set((draft)=>{\n                                draft.error = \"Failed to calculate project\";\n                                draft.isLoading = false;\n                            });\n                        }\n                    }\n                } catch (error) {\n                    set((draft)=>{\n                        draft.error = \"Calculation error occurred\";\n                        draft.isLoading = false;\n                    });\n                }\n            }, 500);\n        },\n        setCalculations: (calculations)=>{\n            set((state)=>{\n                state.currentProject.calculations = calculations;\n            });\n        },\n        resetProject: ()=>{\n            set((state)=>{\n                state.currentProject = initialProject;\n                state.wizardSteps = initialWizardSteps;\n                state.currentStep = 0;\n                state.error = null;\n            });\n        },\n        setError: (error)=>{\n            set((state)=>{\n                state.error = error;\n            });\n        },\n        setLoading: (loading)=>{\n            set((state)=>{\n                state.isLoading = loading;\n            });\n        }\n    })), {\n    name: \"layitright-project-store\",\n    partialize: (state)=>({\n            savedProjects: state.savedProjects\n        })\n}));\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./src/store/project-store.ts\n"));

/***/ })

});